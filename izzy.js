const chat = document.getElementById("chat");
const input = document.getElementById("userInput");

// Function to add messages to chat
function addMessage(sender, text) {
  const msg = document.createElement("p");
  msg.innerHTML = `<strong>${sender}:</strong> ${text}`;
  chat.appendChild(msg);
  chat.scrollTop = chat.scrollHeight;
}

// Called when you press "Send"
function sendMessage() {
  const userText = input.value.trim();
  if (userText === "") return;

  addMessage("You", userText);
  input.value = "";

  // Default response
  let response = "Iâ€™m here ðŸ’™ Iâ€™m listening.";

  // Expanded dictionary
  const responses = [
    { keywords: ["sad", "upset", "cry"], reply: "Iâ€™m sorry youâ€™re feeling this way ðŸ’™. Do you want to talk about it?" },
    { keywords: ["happy", "excited", "joy"], reply: "Thatâ€™s awesome! ðŸ˜Š What made you feel so good?" },
    { keywords: ["lonely", "alone"], reply: "Youâ€™re not alone ðŸ’™ Iâ€™m here with you." },
    { keywords: ["anxious", "scared", "nervous"], reply: "That sounds really tough ðŸ’™. Do you want to tell me whatâ€™s on your mind?" },
    { keywords: ["angry", "mad", "frustrated"], reply: "Itâ€™s okay to feel angry ðŸ’™. Want to vent to me about it?" },
    { keywords: ["help", "advice", "support"], reply: "Of course ðŸ’™. Tell me more about what you need help with." },
    { keywords: ["bored"], reply: "Sometimes boredom is your mind asking for something new ðŸ’­. Want me to suggest an activity?" },
    { keywords: ["tired", "exhausted"], reply: "Sounds like you could use some rest ðŸ’™. Have you been able to relax today?" },
    { keywords: ["stressed"], reply: "Stress can be really heavy ðŸ’™. Letâ€™s pause and take a deep breath together." },
    { keywords: ["thank you", "thanks"], reply: "Anytime ðŸ’™ Iâ€™ve got you." },
  ];

  // Check if the input matches any keywords
  for (let entry of responses) {
    if (entry.keywords.some(word => userText.toLowerCase().includes(word))) {
      response = entry.reply;
      break;
    }
  }

  // Add Izzy's reply after short delay
  setTimeout(() => {
    addMessage("Izzy", response);
  }, 600);
}
const chat = document.getElementById("chat");
const input = document.getElementById("userInput");

// Add messages to chat
function addMessage(sender, text) {
  const msg = document.createElement("p");
  msg.innerHTML = `<strong>${sender}:</strong> ${text}`;
  chat.appendChild(msg);
  chat.scrollTop = chat.scrollHeight;
}

// Send message function
function sendMessage() {
  const userText = input.value.trim();
  if (userText === "") return;

  addMessage("You", userText);
  input.value = "";

  // Default empathetic response
  let response = "I hear you ðŸ’™. Itâ€™s completely understandable to feel this way.";

  // Expanded dictionary with human-like responses
  const responses = [
    { keywords: ["sad", "upset", "cry"], replies: [
      "Iâ€™m really sorry youâ€™re feeling sad ðŸ’™. It makes sense why this would be hard on you, and itâ€™s not your fault.",
      "Itâ€™s okay to cry ðŸ’™. Feeling sad is a normal response, and youâ€™re not to blame.",
      "I hear you ðŸ’™. This must be heavy, and itâ€™s understandable that it affects you deeply."
    ]},
    { keywords: ["happy", "excited", "joy"], replies: [
      "Yay! ðŸ˜Š Thatâ€™s wonderful to hear â€” you deserve this happiness ðŸ’™.",
      "I love that youâ€™re feeling joyful ðŸ’™! Moments like this are so important.",
      "Itâ€™s amazing to feel excitement ðŸ’™. Celebrate that feeling, youâ€™ve earned it!"
    ]},
    { keywords: ["lonely", "alone"], replies: [
      "Youâ€™re not alone ðŸ’™. Itâ€™s normal to feel lonely sometimes, and itâ€™s not your fault.",
      "Feeling alone can be really tough ðŸ’™. Iâ€™m here with you, and it makes sense youâ€™d feel this way.",
      "Loneliness is hard ðŸ’™, and itâ€™s completely understandable. You donâ€™t have to face it alone."
    ]},
    { keywords: ["anxious", "scared", "nervous"], replies: [
      "Feeling anxious can be overwhelming ðŸ’™. Itâ€™s not your fault, and itâ€™s okay to feel this way.",
      "I understand how scary this must feel ðŸ’™. Your feelings are valid, and itâ€™s okay to take a moment.",
      "Anxiety is exhausting ðŸ’™, but itâ€™s understandable and not a reflection on you."
    ]},
    { keywords: ["angry", "mad", "frustrated"], replies: [
      "Itâ€™s okay to feel angry ðŸ’™. This situation is understandably frustrating.",
      "I hear your frustration ðŸ’™. You have every right to feel this way, and itâ€™s not your fault.",
      "Anger is a normal emotion ðŸ’™. Letâ€™s talk it out together â€” itâ€™s understandable."
    ]},
    { keywords: ["help", "advice", "support"], replies: [
      "Of course ðŸ’™. Iâ€™m here to support you, and itâ€™s normal to need help sometimes.",
      "Iâ€™ll do my best to guide you ðŸ’™. Asking for help shows strength, not weakness.",
      "You deserve support ðŸ’™. Itâ€™s okay to ask for help when things feel heavy."
    ]},
    { keywords: ["bored"], replies: [
      "Boredom happens ðŸ’­. Your mind is asking for stimulation, and thatâ€™s totally normal.",
      "Itâ€™s okay to feel bored ðŸ’™. Maybe I can suggest something fun to do?",
      "Boredom can feel frustrating ðŸ’™. Itâ€™s understandable and doesnâ€™t mean anythingâ€™s wrong with you."
    ]},
    { keywords: ["tired", "exhausted"], replies: [
      "Itâ€™s completely understandable to feel tired ðŸ’™. Youâ€™ve been doing your best, and thatâ€™s enough.",
      "Feeling exhausted is normal ðŸ’™. Make sure to take care of yourself, you deserve rest.",
      "Your body and mind might need a break ðŸ’™. Itâ€™s okay to rest and recharge."
    ]},
    { keywords: ["stressed"], replies: [
      "Stress can feel really heavy ðŸ’™. Itâ€™s understandable, and itâ€™s not your fault.",
      "I hear you ðŸ’™. Taking deep breaths can help, and itâ€™s normal to feel stressed sometimes.",
      "Being stressed is tough ðŸ’™. Your feelings are valid, and itâ€™s okay to pause for a moment."
    ]},
    { keywords: ["thank you", "thanks"], replies: [
      "Anytime ðŸ’™. Iâ€™m glad I can be here for you.",
      "Youâ€™re welcome ðŸ’™. Always happy to support you.",
      "Of course ðŸ’™. It means a lot that you trust me enough to share."
    ]},
  ];

  // Match user input with keywords
  for (let entry of responses) {
    if (entry.keywords.some(word => userText.toLowerCase().includes(word))) {
      const randomIndex = Math.floor(Math.random() * entry.replies.length);
      response = entry.replies[randomIndex];
      break;
    }
  }

  // Add Izzy's reply after short delay
  setTimeout(() => {
    addMessage("Izzy", response);
  }, 600);
}
const chat = document.getElementById("chat");
const input = document.getElementById("userInput");

// Track if Pro is unlocked
let isPro = false;

// Function to add messages to chat
function addMessage(sender, text) {
  const msg = document.createElement("p");
  msg.innerHTML = `<strong>${sender}:</strong> ${text}`;
  chat.appendChild(msg);
  chat.scrollTop = chat.scrollHeight;
}

// Function to unlock Pro
function unlockPro(code) {
  const proCode = "IZZYPRO2025"; // Example code
  if (code === proCode) {
    isPro = true;
    addMessage("Izzy", "ðŸ’Ž Pro mode unlocked! I can now give longer, deeper responses for you.");
  } else {
    addMessage("Izzy", "Sorry ðŸ’™, that code isnâ€™t valid.");
  }
}

// Function to send messages
function sendMessage() {
  const userText = input.value.trim();
  if (userText === "") return;

  addMessage("You", userText);
  input.value = "";

  // Check if user wants to unlock Pro
  if (userText.toLowerCase().startsWith("procode ")) {
    const codeEntered = userText.split(" ")[1];
    unlockPro(codeEntered);
    return;
  }

  // Default response
  let response = "I hear you ðŸ’™. Itâ€™s completely understandable to feel this way.";

  // Expanded dictionary with normal and Pro responses
  const responses = [
    { keywords: ["sad", "upset", "cry"], replies: [
      "Iâ€™m really sorry youâ€™re feeling sad ðŸ’™. Itâ€™s understandable why this would be hard on you, and itâ€™s not your fault.",
      "Itâ€™s okay to cry ðŸ’™. Feeling sad is normal, and youâ€™re not to blame.",
      "I hear you ðŸ’™. This must be heavy, and itâ€™s understandable that it affects you deeply."
    ], proReplies: [
      "I can tell this is weighing on you heavily ðŸ’™. Feeling sad in this situation is completely normal, and none of it is your fault. Want to talk about whatâ€™s been happening step by step?",
      "Itâ€™s okay to feel the way you do ðŸ’™. Letâ€™s explore why this is so hard for you and remind you that your feelings are valid.",
      "Sadness can feel overwhelming ðŸ’™. Remember, youâ€™re not alone, and you donâ€™t have to carry this by yourself. Letâ€™s unpack it together."
    ]},
    { keywords: ["happy", "excited", "joy"], replies: [
      "Thatâ€™s awesome! ðŸ˜Š What made you feel so good?",
      "Yay! I love hearing happy news ðŸ’™. Tell me more!",
      "You deserve that happiness! ðŸ’™ Want to share why youâ€™re feeling it?"
    ], proReplies: [
      "Your joy is contagious ðŸ’™! Iâ€™d love to hear all the details so we can really celebrate this together.",
      "Feeling this kind of excitement is wonderful ðŸ’™. Letâ€™s explore what brought this happiness into your life!",
      "Itâ€™s amazing to feel such joy ðŸ’™. Letâ€™s talk about what made you feel this way and how to savor it fully."
    ]},
    // Add more moods similarly...
  ];

  // Match keywords
  for (let entry of responses) {
    if (entry.keywords.some(word => userText.toLowerCase().includes(word))) {
      const arrayToUse = isPro && entry.proReplies ? entry.proReplies : entry.replies;
      const randomIndex = Math.floor(Math.random() * arrayToUse.length);
      response = arrayToUse[randomIndex];
      break;
    }
  }

  // Add Izzy's reply after delay
  setTimeout(() => {
    addMessage("Izzy", response);
  }, 600);
}
const chat = document.getElementById("chat");
const userInput = document.getElementById("userInput");

let isPro = false;
let coins = 0;
let currentVoice = "default";
const familyCode = "IZZYPRO"; // secret code for family/friends

let messages = [
  { sender: "bot", text: "Hi, Iâ€™m Izzy. Iâ€™m here to listen. How are you feeling today?" }
];

function renderMessages() {
  chat.innerHTML = "";
  messages.forEach(msg => {
    const div = document.createElement("div");
    div.style.margin = "10px 0";
    div.style.textAlign = msg.sender === "user" ? "right" : "left";

    const bubble = document.createElement("div");
    bubble.style.display = "inline-block";
    bubble.style.padding = "10px 15px";
    bubble.style.borderRadius = "20px";
    bubble.style.background = msg.sender === "user" ? "#4f83ff" : "#eee";
    bubble.style.color = msg.sender === "user" ? "#fff" : "#000";
    bubble.innerText = msg.text;

    div.appendChild(bubble);

    if (msg.sender === "bot") {
      const speakBtn = document.createElement("button");
      speakBtn.innerText = "ðŸ”Š";
      speakBtn.style.marginLeft = "10px";
      speakBtn.onclick = () => speak(msg.text);
      div.appendChild(speakBtn);
    }

    chat.appendChild(div);
    chat.scrollTop = chat.scrollHeight;
  });
}

function sendMessage() {
  const input = userInput.value.trim();
  if (!input) return;

  messages.push({ sender: "user", text: input });

  let reply = "Iâ€™m here listening. ðŸ’™";

  if (isPro) {
    reply = "Thank you for being Pro! How can I help you today in a deeper way?";
    addCoins();
  }

  messages.push({ sender: "bot", text: reply });
  userInput.value = "";
  renderMessages();
}

function speak(text) {
  const utterance = new SpeechSynthesisUtterance(text);
  utterance.lang = "en-US";

  const availableVoices = window.speechSynthesis.getVoices();
  if (currentVoice === "female") {
    utterance.voice = availableVoices.find(v => v.name.toLowerCase().includes("female")) || availableVoices[0];
  } else if (currentVoice === "male") {
    utterance.voice = availableVoices.find(v => v.name.toLowerCase().includes("male")) || availableVoices[0];
  }

  window.speechSynthesis.speak(utterance);
}

// Coins system
function addCoins() {
  coins += 5; // 5 coins per message for Pro
  console.log(`You earned 5 coins! Total: ${coins}`);
}

// Change voice
function changeVoice(voiceCode) {
  if (!isPro) {
    alert("Upgrade to Pro to change voices ðŸ’™");
    return;
  }
  currentVoice = voiceCode;
  alert(`Voice changed to ${voiceCode}`);
}

// Pro button logic
function proClick() {
  const code = prompt("Enter your Pro code (for family/friends) or leave blank to donate $5/month:");
  if (code === familyCode) {
    isPro = true;
    alert("Pro unlocked! Enjoy deeper responses, coins, and voices ðŸ’™");
  } else {
    const donate = confirm("You need to donate $5/month to unlock Pro. Click OK to donate.");
    if (donate) {
      window.open("https://www.savethechildren.org/us/what-we-do/donate", "_blank");
      alert("After donating, refresh the page and Pro will unlock for you!");
    }
  }
}

// Initial render
renderMessages();

